/*
 * This source file was generated by the Gradle 'init' task
 */
package nr.dungeoncrawler;

import java.util.ArrayList;
import java.util.Scanner;

import org.checkerframework.checker.units.qual.s;

import nr.dungeoncrawler.entities.Monster;
import nr.dungeoncrawler.entities.Player;
import nr.dungeoncrawler.entities.Potion;
import nr.dungeoncrawler.enums.ConsumableNames;
import nr.dungeoncrawler.interfaces.Consumable;
import nr.dungeoncrawler.interfaces.Item;
import nr.dungeoncrawler.interfaces.Node;
import nr.dungeoncrawler.services.DungeonService;
import nr.dungeoncrawler.services.ValidationService;

public class App {

    public static void main(String[] args) {
        oneLineOfSpace();
        Player player = new Player("player1");
        System.out.printf("Welcome %s!\n", player.getName());
        oneLineOfSpace();
        System.out.println("You are in a dungeon! Here is the map:");
        twoLinesOfSpace();
        

        DungeonService dungeonService = new DungeonService();
        Node[][] level = dungeonService.generateLevel(5, 7);
        dungeonService.setLevel(level);
        System.out.println("row length:" + level[0].length);
        int currentPlayerLevel = dungeonService.getCurrentPlayerLevel();
        dungeonService.printLevel(level);
        twoLinesOfSpace();

        System.out.println("You can only choose the rooms from the level you are currently in.");
        System.out.println("You move a level up when clearing a room.");
        System.out.println("Code to enter a room is the number of level + the number of room.");
        System.out.println("For example, to enter the first room in the first level, you enter 01.");
        System.out.println("YOU ARE CURRENTLY AT LEVEL " + dungeonService.getCurrentPlayerLevel());
        oneLineOfSpace();

        System.out.println("So which room do you want to enter?");

        Scanner scanner = new Scanner(System.in);
        ValidationService validationService = new ValidationService(scanner);
        String input = scanner.nextLine();
        input = validationService.validateChooseLevelInput(input, dungeonService);
        System.out.printf("You chose room %s",
                level[currentPlayerLevel][Integer.parseInt(input.substring(1)) - 1].getType());
        oneLineOfSpace();
        oneLineOfSpace();

        System.out.println("You encounter a monster!");
        System.out.println("GRAGAS THE DRUNKEN");
        System.out.println("MONSTER ATTACKS YOU!");

        Monster monster = new Monster("gragas", 10, 3, 10);
        monster.attack(player);

        twoLinesOfSpace();
        System.out.println("Health before attack: " + player.getHealth());
        System.out.println("You lose " + monster.getDamage() + " health!");
        player.setHealth(player.getHealth() - monster.getDamage());
        System.out.println("Health after attack: " + player.getHealth());
        twoLinesOfSpace();
        System.out.println("What do you want to do?");
        System.out.println("1. Attack");
        System.out.println("2. Open inventory");
        System.out.println("3. Block next attack");

        input = scanner.nextLine();
        input = validationService.validateChoiceInBattleInput(input, dungeonService);

        if (input.equals("1")) {
            player.attack(monster);
            System.out.println("Monster health after attack:" + monster.getHealth());
            oneLineOfSpace();
        }
        if (monster.getHealth() <= 0) {
            System.out.println("You killed the monster!");
            System.out.println("You found a " + monster.getDrop().getName());
            System.out.println("Add " + monster.getDrop().getName() + " to inventory?");
            System.out.println("yes/no?");
            input = scanner.nextLine();
            input = validationService.validateYesNoInput(input);
            
            Item monsterDrop = monster.getDrop();
            player.getInventory().add(monsterDrop);
            System.out.println(monsterDrop.getName() + " added to inventory!");
            System.out.println("You can go the next level.");

            currentPlayerLevel++;
            dungeonService.setCurrentPlayerLevel(currentPlayerLevel);

            System.out.println("YOU ARE CURRENTLY AT LEVEL " + dungeonService.getCurrentPlayerLevel());
            twoLinesOfSpace();
            System.out.println("Which room do you choose now?");

            input = scanner.nextLine();
            input = validationService.validateChooseLevelInput(input, dungeonService);
            System.out.printf("You chose room %s",
                    level[currentPlayerLevel][Integer.parseInt(input.substring(1)) - 1].getType());
            oneLineOfSpace();
        
        }
    }

    public static void twoLinesOfSpace() {
        System.out.print("\n\n");
    }

    public static void oneLineOfSpace() {
        System.out.println();
    }

}
